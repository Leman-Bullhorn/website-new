generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Contributor {
  id                 String              @id @default(cuid())
  slug               String              @unique
  firstName          String
  lastName           String
  title              String
  bio                String?             @db.Text
  headshotUrl        String?
  articles           Article[]
  media              Media[]
  articleSubmissions ArticleSubmission[]
  podcasts           Podcast[]
}

enum Section {
  News
  Opinions
  Features
  Science
  Sports
  Arts
  Humor
  Podcast
}

model Media {
  id                          String              @id @default(cuid())
  contentUrl                  String
  alt                         String
  contributor                 Contributor?        @relation(fields: [contributorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  contributorId               String?
  contributorText             String
  thumbnailArticles           Article[]           @relation("thumbnail")
  mediaArticles               Article[]           @relation("media")
  thumbnailArticleSubmissions ArticleSubmission[] @relation("thumbnailArticleSubmissions")
  mediaSubmissions            ArticleSubmission[] @relation("mediaSubmissions")

  @@index([contributorId])
}

model Podcast {
  id              String        @id @default(cuid())
  slug            String        @unique
  title           String
  description     String        @db.Text
  publicationDate DateTime
  audioUrl        String
  duration        Int
  hosts           Contributor[]
}

model Article {
  id              String        @id @default(cuid())
  slug            String        @unique
  headline        String
  focus           String        @db.Text
  body            Json
  publicationDate DateTime
  featured        Boolean       @default(false)
  section         Section
  frontPageIndex  Int?
  writers         Contributor[]
  thumbnail       Media?        @relation(name: "thumbnail", fields: [thumbnailId], references: [id])
  thumbnailId     String?
  media           Media[]       @relation("media")

  @@index([thumbnailId])
}

model ArticleSubmission {
  id        String        @id @default(cuid())
  headline  String
  focus     String        @db.Text
  body      Json
  section   Section
  writers   Contributor[]
  thumbnail Media?        @relation(name: "thumbnailArticleSubmissions", fields: [thumbnailId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  media     Media[]       @relation(name: "mediaSubmissions")

  thumbnailId String?

  @@index([thumbnailId])
}
